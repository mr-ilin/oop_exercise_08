// Создать приложение, которое будет считывать из стандартного ввода данные фигур, согласно варианту задания, выводить их характеристики на экран и
// записывать в файл.Фигуры могут задаваться как своими вершинами, так и другими характеристиками
// (например, координата центра, количество точек и радиус).
// Программа должна :
/*
 1. Осуществлять ввод из стандартного ввода данных фигур, согласно варианту задания;
 2. Программа должна создавать классы, соответствующие введенным данных фигур;
 3. Программа должна содержать внутренний буфер, в который помещаются фигуры.Для создания буфера допускается использовать стандартные контейнеры
    STL.Размер буфера задается параметром командной строки.Например, для буфера размером 10 фигур: oop_exercise_08 10
 4. При накоплении буфера они должны запускаться на асинхронную обработку, после чего буфер должен очищаться;
 5. Обработка должна производиться в отдельном потоке;
 6. Реализовать два обработчика, которые должны обрабатывать данные буфера :
     a.Вывод информации о фигурах в буфере на экран;
     b.Вывод информации о фигурах в буфере в файл.Для каждого буфера должен создаваться файл с уникальным именем.
 7. Оба обработчика должны обрабатывать каждый введенный буфер.Т.е.после каждого заполнения буфера его содержимое должно выводиться как на экран,
    так и в файл.
 8. Обработчики должны быть реализованы в виде лямбда - функций и должны хранится в специальном массиве обработчиков.Откуда и должны
    последовательно вызываться в потоке – обработчике.
  9. В программе должно быть ровно два потока(thread).Один основной(main) и второй для обработчиков;
 10. В программе должен явно прослеживаться шаблон Publish - Subscribe.Каждый обработчик должен быть реализован как отдельный подписчик.
 11. Реализовать в основном потоке(main) ожидание обработки буфера в потоке - обработчике.Т.е.после отправки буфера на обработку основной поток должен ждать, пока поток обработчик выведет данные на экран и запишет в файл.
*/

#include <iostream>
#include <fstream>
#include <exception>
#include <list>
#include <vector>
#include <string>
#include <utility>
#include <memory>
#include <future>
#include <condition_variable>

#include "document.cpp"
#include "hexagon.hpp"
#include "octagon.hpp"
#include "triangle.hpp"

using namespace std;

int main(int argc, char const *argv[]) {
    int size;
    cout << "Enter chunk size : ";
    cin >> size;
    
    try {
        Document doc(size);
        string cmd;
        while (cin >> cmd) {
            if (cmd == "Triangle") {
                doc.Add(make_shared<Triangle>(cin));
            }
            else if (cmd == "Hexagon") {
                doc.Add(make_shared<Hexagon>(cin));
            }
            else if (cmd == "Octagon") {
                doc.Add(make_shared<Octagon>(cin));
            }
            else {
                cout << "Wrong command" << endl;
            }
        }
    }
    catch (exception& ex) {
        cerr << ex.what() << endl;
    }

    return 0;
}
